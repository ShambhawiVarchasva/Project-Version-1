<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">
  
  <title>PusherPoll</title>
  <style>.hidden { display: none; }</style>
</head>

<body>
     <script src="http://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pusher/4.2.2/pusher.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/canvasjs/1.7.0/canvasjs.min.js"></script>
  
  <div class="container">
    <h1>OS Vote</h1>
    <p>Vote for your favorite OS to develop on</p>
    <div id="hasVotedAlreadyErrorMsg" class="card-panel hidden" style="width: 30%">
      <span class="red-text text-darken-2">You have already voted, you can only vote once.</span>
    </div>
    <form id="vote-form">
      <p>
        <input type="radio" name="os" id="windows" value="Windows">
        <label for="windows">Windows</label>
      </p>
      <p>
        <input type="radio" name="os" id="macos" value="MacOS">
        <label for="macos">MacOS</label>
      </p>
      <p>
        <input type="radio" name="os" id="linux" value="Linux">
        <label for="linux">Linux Distro</label>
      </p>
      <p>
        <input type="radio" name="os" id="other" value="Other">
        <label for="other">Something Else</label>
      </p>
      <input type="submit" value="Vote" class="btn">
    </form>

    <br>
    <br>
    
    <h5 style="text-align: center" id="chartTitle"></h5>
    <div id="chartContainer" style="height: 300px;width:100%"></div>
  </div>

 
<script>
  const form = document.getElementById('vote-form');
var event;
if(form)
{
form.addEventListener('submit', e=>{
    
    const choice = document.querySelector('input[name=os]:checked').value;
    const data = {os: choice};

    fetch('http://localhost:3000/poll',{
        method: 'post',
        body: JSON.stringify(data),
        headers: new Headers({
            'Content-Type': 'application/json'
        })
    }).then(res => res.json())
    .catch(err => console.log(err));

    e.preventDefault();
});
};
fetch("http://localhost:3000/poll")
    .then(res => res.json())
    .then(data => {
        let votes = data.votes;
        let totalVotes = votes.length;
        document.querySelector('#chartTitle').textContent = `Total Votes: ${totalVotes}`;

        let voteCounts = {
            Windows: 0,
            MacOS: 0,
            Linux: 0,
            Other: 0
        };

        voteCounts = votes.reduce((acc, vote) => (
            (acc[vote.os] = (acc[vote.os] || 0) + parseInt(vote.points)), acc),
            {}
        );

        let dataPoints = [
            { label: 'Windows', y: voteCounts.Windows },
            { label: 'MacOS', y: voteCounts.MacOS },
            { label: 'Linux', y: voteCounts.Linux },
            { label: 'Other', y: voteCounts.Other }
        ];
            
        const chartContainer = document.querySelector('#chartContainer');
        
        if(chartContainer){

            // Listen for the event.
            document.addEventListener('votesAdded', function (e) { 
                document.querySelector('#chartTitle').textContent = `Total Votes: ${e.detail.totalVotes}`;
            });
            
            const chart = new CanvasJS.Chart('chartContainer', {
                animationEnabled: true,
                theme: 'theme1',
                data:[
                    {
                        type: 'column',
                        dataPoints: dataPoints
                    }
                ]
            });
            chart.render();
        
             // Enable pusher logging - don't include this in production
             Pusher.logToConsole = true;
        
             var pusher = new Pusher({
                appId: '621753',
                key: '65effbd675f2c9966ee3',
                secret: 'eff70d90708445fd1230',
                cluster: 'ap2',
                encrypted: true
              });
         
             var channel = pusher.subscribe('os-poll');

             channel.bind('os-vote', function(data) {
               dataPoints.forEach((point)=>{
                   if(point.label==data.os)
                   {
                        point.y+=data.points;
                        totalVotes+=data.points;
                        event = new CustomEvent('votesAdded',{detail:{totalVotes:totalVotes}});
                        // Dispatch the event.
                        document.dispatchEvent(event);
                   }
               });
               chart.render();
             });
        }

});
</script>
</body>

</html>